{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n  constructor(destSize) {\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    this.customUniforms = [{\n      name: 'start',\n      arrayIndex: this.rank,\n      type: 'int'\n    }];\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n    const innerDims = this.rank === 1 ? 'sourceLoc' : \"vec2(\".concat(sourceLoc.slice(-2).join(), \")\");\n    const getChannel = \"getChannel(getSource(\".concat(sourceLoc.join(), \"), \").concat(innerDims, \")\");\n    const upperRow = \"\\n      result.x = \".concat(getChannel, \";\\n      if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n        ++\").concat(sourceLoc[this.rank - 1], \";\\n        result.y = \").concat(getChannel, \";\\n        --\").concat(sourceLoc[this.rank - 1], \";\\n      }\\n    \");\n    const lowerRow = this.rank === 1 ? '' : \"\\n      --\".concat(coords[this.rank - 1], \";\\n      if (++\").concat(coords[this.rank - 2], \" < \").concat(destSize[this.rank - 2], \") {\\n        ++\").concat(sourceLoc[this.rank - 2], \";\\n        result.z = \").concat(getChannel, \";\\n        if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n          ++\").concat(sourceLoc[this.rank - 1], \";\\n          result.w = \").concat(getChannel, \";\\n        }\\n      }\\n    \");\n    const sourceLocSetup = this.rank <= 4 ? \"sourceLoc = coords +\\n            \".concat(dtype, \"(\").concat(destSize.map((_, i) => \"start[\".concat(i, \"]\")).join(), \");\") : destSize.map((_, i) => \"\".concat(sourceLoc[i], \" = \").concat(coords[i], \" + start[\").concat(i, \"];\")).join('\\n');\n    this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" coords = getOutputCoords();\\n        \").concat(dtype, \" sourceLoc;\\n        \").concat(sourceLocSetup, \"\\n        vec4 result = vec4(0.);\\n        \").concat(upperRow, \"\\n        \").concat(lowerRow, \"\\n        setOutput(result);\\n      }\\n    \");\n  }\n}","map":{"version":3,"names":["getChannels","getCoordsDataType","SlicePackedProgram","constructor","destSize","variableNames","packedInputs","packedOutput","outputShape","rank","length","customUniforms","name","arrayIndex","type","dtype","coords","sourceLoc","innerDims","concat","slice","join","getChannel","upperRow","lowerRow","sourceLocSetup","map","_","i","userCode"],"sources":["E:\\office work\\hositngYOLOgithub\\tfjs-backend-webgl\\src\\slice_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType, UniformType} from './shader_compiler';\n\nexport class SlicePackedProgram implements GPGPUProgram {\n  variableNames = ['source'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n  customUniforms: Array<{name: string; arrayIndex: number; type: UniformType;}>;\n\n  constructor(destSize: number[]) {\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    this.customUniforms = [{name: 'start', arrayIndex: this.rank, type: 'int'}];\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n\n    const innerDims =\n        this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel =\n        `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n\n    const sourceLocSetup = this.rank <= 4 ?\n        `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n        destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n            .join('\\n');\n    this.userCode = `\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}