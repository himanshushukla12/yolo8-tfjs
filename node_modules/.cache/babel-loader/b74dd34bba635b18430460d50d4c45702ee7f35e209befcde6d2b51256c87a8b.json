{"ast":null,"code":"import labels from\"./labels.json\";/**\r\n * Render prediction boxes\r\n * @param {HTMLCanvasElement} canvasRef canvas tag reference\r\n * @param {Array} boxes_data boxes array\r\n * @param {Array} scores_data scores array\r\n * @param {Array} classes_data class array\r\n * @param {Array[Number]} ratios boxes ratio [xRatio, yRatio]\r\n */export const renderBoxes=(canvasRef,boxes_data,scores_data,classes_data,ratios)=>{const ctx=canvasRef.getContext(\"2d\");ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);// clean canvas\nconst colors=new Colors();// font configs\nconst font=\"\".concat(Math.max(Math.round(Math.max(ctx.canvas.width,ctx.canvas.height)/40),14),\"px Arial\");ctx.font=font;ctx.textBaseline=\"top\";for(let i=0;i<scores_data.length;++i){// filter based on class threshold\nconst klass=labels[classes_data[i]];const color=colors.get(classes_data[i]);const score=(scores_data[i]*100).toFixed(1);let[y1,x1,y2,x2]=boxes_data.slice(i*4,(i+1)*4);x1*=ratios[0];x2*=ratios[0];y1*=ratios[1];y2*=ratios[1];const width=x2-x1;const height=y2-y1;// draw box.\nctx.fillStyle=Colors.hexToRgba(color,0.2);ctx.fillRect(x1,y1,width,height);// draw border box.\nctx.strokeStyle=color;ctx.lineWidth=Math.max(Math.min(ctx.canvas.width,ctx.canvas.height)/200,2.5);ctx.strokeRect(x1,y1,width,height);// Draw the label background.\nctx.fillStyle=color;const textWidth=ctx.measureText(klass+\" - \"+score+\"%\").width;const textHeight=parseInt(font,10);// base 10\nconst yText=y1-(textHeight+ctx.lineWidth);ctx.fillRect(x1-1,yText<0?0:yText,// handle overflow label box\ntextWidth+ctx.lineWidth,textHeight+ctx.lineWidth);// Draw labels\nctx.fillStyle=\"#ffffff\";ctx.fillText(klass+\" - \"+score+\"%\",x1-1,yText<0?0:yText);}};class Colors{// ultralytics color palette https://ultralytics.com/\nconstructor(){this.get=i=>this.palette[Math.floor(i)%this.n];this.palette=[\"#FF3838\",\"#FF9D97\",\"#FF701F\",\"#FFB21D\",\"#CFD231\",\"#48F90A\",\"#92CC17\",\"#3DDB86\",\"#1A9334\",\"#00D4BB\",\"#2C99A8\",\"#00C2FF\",\"#344593\",\"#6473FF\",\"#0018EC\",\"#8438FF\",\"#520085\",\"#CB38FF\",\"#FF95C8\",\"#FF37C7\"];this.n=this.palette.length;}}Colors.hexToRgba=(hex,alpha)=>{var result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result?\"rgba(\".concat([parseInt(result[1],16),parseInt(result[2],16),parseInt(result[3],16)].join(\", \"),\", \").concat(alpha,\")\"):null;};","map":{"version":3,"names":["labels","renderBoxes","canvasRef","boxes_data","scores_data","classes_data","ratios","ctx","getContext","clearRect","canvas","width","height","colors","Colors","font","concat","Math","max","round","textBaseline","i","length","klass","color","get","score","toFixed","y1","x1","y2","x2","slice","fillStyle","hexToRgba","fillRect","strokeStyle","lineWidth","min","strokeRect","textWidth","measureText","textHeight","parseInt","yText","fillText","constructor","palette","floor","n","hex","alpha","result","exec","join"],"sources":["E:/office work/hositngYOLOgithub/yolov8-tfjs/src/utils/renderBox.js"],"sourcesContent":["import labels from \"./labels.json\";\r\n\r\n/**\r\n * Render prediction boxes\r\n * @param {HTMLCanvasElement} canvasRef canvas tag reference\r\n * @param {Array} boxes_data boxes array\r\n * @param {Array} scores_data scores array\r\n * @param {Array} classes_data class array\r\n * @param {Array[Number]} ratios boxes ratio [xRatio, yRatio]\r\n */\r\nexport const renderBoxes = (canvasRef, boxes_data, scores_data, classes_data, ratios) => {\r\n  const ctx = canvasRef.getContext(\"2d\");\r\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clean canvas\r\n\r\n  const colors = new Colors();\r\n\r\n  // font configs\r\n  const font = `${Math.max(\r\n    Math.round(Math.max(ctx.canvas.width, ctx.canvas.height) / 40),\r\n    14\r\n  )}px Arial`;\r\n  ctx.font = font;\r\n  ctx.textBaseline = \"top\";\r\n\r\n  for (let i = 0; i < scores_data.length; ++i) {\r\n    // filter based on class threshold\r\n    const klass = labels[classes_data[i]];\r\n    const color = colors.get(classes_data[i]);\r\n    const score = (scores_data[i] * 100).toFixed(1);\r\n\r\n    let [y1, x1, y2, x2] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n    x1 *= ratios[0];\r\n    x2 *= ratios[0];\r\n    y1 *= ratios[1];\r\n    y2 *= ratios[1];\r\n    const width = x2 - x1;\r\n    const height = y2 - y1;\r\n\r\n    // draw box.\r\n    ctx.fillStyle = Colors.hexToRgba(color, 0.2);\r\n    ctx.fillRect(x1, y1, width, height);\r\n\r\n    // draw border box.\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = Math.max(Math.min(ctx.canvas.width, ctx.canvas.height) / 200, 2.5);\r\n    ctx.strokeRect(x1, y1, width, height);\r\n\r\n    // Draw the label background.\r\n    ctx.fillStyle = color;\r\n    const textWidth = ctx.measureText(klass + \" - \" + score + \"%\").width;\r\n    const textHeight = parseInt(font, 10); // base 10\r\n    const yText = y1 - (textHeight + ctx.lineWidth);\r\n    ctx.fillRect(\r\n      x1 - 1,\r\n      yText < 0 ? 0 : yText, // handle overflow label box\r\n      textWidth + ctx.lineWidth,\r\n      textHeight + ctx.lineWidth\r\n    );\r\n\r\n    // Draw labels\r\n    ctx.fillStyle = \"#ffffff\";\r\n    ctx.fillText(klass + \" - \" + score + \"%\", x1 - 1, yText < 0 ? 0 : yText);\r\n  }\r\n};\r\n\r\nclass Colors {\r\n  // ultralytics color palette https://ultralytics.com/\r\n  constructor() {\r\n    this.palette = [\r\n      \"#FF3838\",\r\n      \"#FF9D97\",\r\n      \"#FF701F\",\r\n      \"#FFB21D\",\r\n      \"#CFD231\",\r\n      \"#48F90A\",\r\n      \"#92CC17\",\r\n      \"#3DDB86\",\r\n      \"#1A9334\",\r\n      \"#00D4BB\",\r\n      \"#2C99A8\",\r\n      \"#00C2FF\",\r\n      \"#344593\",\r\n      \"#6473FF\",\r\n      \"#0018EC\",\r\n      \"#8438FF\",\r\n      \"#520085\",\r\n      \"#CB38FF\",\r\n      \"#FF95C8\",\r\n      \"#FF37C7\",\r\n    ];\r\n    this.n = this.palette.length;\r\n  }\r\n\r\n  get = (i) => this.palette[Math.floor(i) % this.n];\r\n\r\n  static hexToRgba = (hex, alpha) => {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? `rgba(${[parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)].join(\r\n          \", \"\r\n        )}, ${alpha})`\r\n      : null;\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}