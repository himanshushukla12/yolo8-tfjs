{"ast":null,"code":"import{useState,useRef}from\"react\";import{Webcam}from\"../utils/webcam\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ButtonHandler=_ref=>{let{imageRef,cameraRef,videoRef}=_ref;const[streaming,setStreaming]=useState(null);// streaming state\nconst inputImageRef=useRef(null);// video input reference\nconst inputVideoRef=useRef(null);// video input reference\nconst webcam=new Webcam();// webcam handler\n// closing image\nconst closeImage=()=>{const url=imageRef.current.src;imageRef.current.src=\"#\";// restore image source\nURL.revokeObjectURL(url);// revoke url\nsetStreaming(null);// set streaming to null\ninputImageRef.current.value=\"\";// reset input image\nimageRef.current.style.display=\"none\";// hide image\n};// closing video streaming\nconst closeVideo=()=>{const url=videoRef.current.src;videoRef.current.src=\"\";// restore video source\nURL.revokeObjectURL(url);// revoke url\nsetStreaming(null);// set streaming to null\ninputVideoRef.current.value=\"\";// reset input video\nvideoRef.current.style.display=\"none\";// hide video\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",style:{display:\"none\"},onChange:e=>{const url=URL.createObjectURL(e.target.files[0]);// create blob url\nimageRef.current.src=url;// set video source\nimageRef.current.style.display=\"block\";// show video\nsetStreaming(\"image\");// set streaming to video\n},ref:inputImageRef}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{// if not streaming\nif(streaming===null)inputImageRef.current.click();// closing image streaming\nelse if(streaming===\"image\")closeImage();else alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming));// if streaming video or webcam\n},children:[streaming===\"image\"?\"Close\":\"Open\",\" Image\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"video/*\",style:{display:\"none\"},onChange:e=>{if(streaming===\"image\")closeImage();// closing image streaming\nconst url=URL.createObjectURL(e.target.files[0]);// create blob url\nvideoRef.current.src=url;// set video source\nvideoRef.current.addEventListener(\"ended\",()=>closeVideo());// add ended video listener\nvideoRef.current.style.display=\"block\";// show video\nsetStreaming(\"video\");// set streaming to video\n},ref:inputVideoRef}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{// if not streaming\nif(streaming===null||streaming===\"image\")inputVideoRef.current.click();// closing video streaming\nelse if(streaming===\"video\")closeVideo();else alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming));// if streaming webcam\n},children:[streaming===\"video\"?\"Close\":\"Open\",\" Video\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{// if not streaming\nif(streaming===null||streaming===\"image\"){// closing image streaming\nif(streaming===\"image\")closeImage();webcam.open(cameraRef.current);// open webcam\ncameraRef.current.style.display=\"block\";// show camera\nsetStreaming(\"camera\");// set streaming to camera\n}// closing video streaming\nelse if(streaming===\"camera\"){webcam.close(cameraRef.current);cameraRef.current.style.display=\"none\";setStreaming(null);}else alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming));// if streaming video\n},children:[streaming===\"camera\"?\"Close\":\"Open\",\" Webcam\"]})]});};export default ButtonHandler;","map":{"version":3,"names":["useState","useRef","Webcam","jsx","_jsx","jsxs","_jsxs","ButtonHandler","_ref","imageRef","cameraRef","videoRef","streaming","setStreaming","inputImageRef","inputVideoRef","webcam","closeImage","url","current","src","URL","revokeObjectURL","value","style","display","closeVideo","className","children","type","accept","onChange","e","createObjectURL","target","files","ref","onClick","click","alert","concat","addEventListener","open","close"],"sources":["E:/office work/hositngYOLOgithub/yolov8-tfjs/src/components/btn-handler.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { Webcam } from \"../utils/webcam\";\r\n\r\nconst ButtonHandler = ({ imageRef, cameraRef, videoRef }) => {\r\n  const [streaming, setStreaming] = useState(null); // streaming state\r\n  const inputImageRef = useRef(null); // video input reference\r\n  const inputVideoRef = useRef(null); // video input reference\r\n  const webcam = new Webcam(); // webcam handler\r\n\r\n  // closing image\r\n  const closeImage = () => {\r\n    const url = imageRef.current.src;\r\n    imageRef.current.src = \"#\"; // restore image source\r\n    URL.revokeObjectURL(url); // revoke url\r\n\r\n    setStreaming(null); // set streaming to null\r\n    inputImageRef.current.value = \"\"; // reset input image\r\n    imageRef.current.style.display = \"none\"; // hide image\r\n  };\r\n\r\n  // closing video streaming\r\n  const closeVideo = () => {\r\n    const url = videoRef.current.src;\r\n    videoRef.current.src = \"\"; // restore video source\r\n    URL.revokeObjectURL(url); // revoke url\r\n\r\n    setStreaming(null); // set streaming to null\r\n    inputVideoRef.current.value = \"\"; // reset input video\r\n    videoRef.current.style.display = \"none\"; // hide video\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn-container\">\r\n      {/* Image Handler */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        style={{ display: \"none\" }}\r\n        onChange={(e) => {\r\n          const url = URL.createObjectURL(e.target.files[0]); // create blob url\r\n          imageRef.current.src = url; // set video source\r\n          imageRef.current.style.display = \"block\"; // show video\r\n          setStreaming(\"image\"); // set streaming to video\r\n        }}\r\n        ref={inputImageRef}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          // if not streaming\r\n          if (streaming === null) inputImageRef.current.click();\r\n          // closing image streaming\r\n          else if (streaming === \"image\") closeImage();\r\n          else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video or webcam\r\n        }}\r\n      >\r\n        {streaming === \"image\" ? \"Close\" : \"Open\"} Image\r\n      </button>\r\n\r\n      {/* Video Handler */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\"video/*\"\r\n        style={{ display: \"none\" }}\r\n        onChange={(e) => {\r\n          if (streaming === \"image\") closeImage(); // closing image streaming\r\n          const url = URL.createObjectURL(e.target.files[0]); // create blob url\r\n          videoRef.current.src = url; // set video source\r\n          videoRef.current.addEventListener(\"ended\", () => closeVideo()); // add ended video listener\r\n          videoRef.current.style.display = \"block\"; // show video\r\n          setStreaming(\"video\"); // set streaming to video\r\n        }}\r\n        ref={inputVideoRef}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          // if not streaming\r\n          if (streaming === null || streaming === \"image\") inputVideoRef.current.click();\r\n          // closing video streaming\r\n          else if (streaming === \"video\") closeVideo();\r\n          else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming webcam\r\n        }}\r\n      >\r\n        {streaming === \"video\" ? \"Close\" : \"Open\"} Video\r\n      </button>\r\n\r\n      {/* Webcam Handler */}\r\n      <button\r\n        onClick={() => {\r\n          // if not streaming\r\n          if (streaming === null || streaming === \"image\") {\r\n            // closing image streaming\r\n            if (streaming === \"image\") closeImage();\r\n            webcam.open(cameraRef.current); // open webcam\r\n            cameraRef.current.style.display = \"block\"; // show camera\r\n            setStreaming(\"camera\"); // set streaming to camera\r\n          }\r\n          // closing video streaming\r\n          else if (streaming === \"camera\") {\r\n            webcam.close(cameraRef.current);\r\n            cameraRef.current.style.display = \"none\";\r\n            setStreaming(null);\r\n          } else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video\r\n        }}\r\n      >\r\n        {streaming === \"camera\" ? \"Close\" : \"Open\"} Webcam\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}